generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                 Int     @id @default(autoincrement())
  email              String  @unique
  username           String  @unique
  password           String
  hashedRefreshToken String?
}

model items {
  id           Int                  @id @default(autoincrement())
  itemCode     String
  name         String
  description  String?
  price        Float?
  quantity     Int                  @default(0)
  image        String?
  createdUser  Int
  createdAt    DateTime             @default(now())
  updatedUser  Int?
  updatedAt    DateTime?
  isDeleted    Int                  @default(0)
  orderItems   order_items[]
  packingScans packing_scans_list[]
}

model orders {
  id             Int                  @id @default(autoincrement())
  customer       String
  status         Int                  @default(0)
  trackingNumber String?
  createdAt      DateTime             @default(now())
  updatedUser    Int?
  updatedAt      DateTime?
  isDeleted      Int                  @default(0)
  orderItems     order_items[]
  packingProofs  packing_proofs[]
  packingScans   packing_scans_list[]
}

model order_items {
  id       Int    @id @default(autoincrement())
  orderId  Int
  itemId   Int
  quantity Int
  item     items  @relation(fields: [itemId], references: [id], onDelete: Cascade)
  order    orders @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model packing_proofs {
  id             Int                  @id @default(autoincrement())
  orderId        Int
  video          String
  station        String
  startTime      DateTime
  finishTime     DateTime?
  isSuccessfully Int                  @default(0)
  createdAt      DateTime             @default(now())
  updatedAt      DateTime?
  isDeleted      Int                  @default(0)
  order          orders               @relation(fields: [orderId], references: [id], onDelete: Cascade)
  packingScans   packing_scans_list[]
}

model packing_scans_list {
  id              Int            @id @default(autoincrement())
  packingProofId  Int
  orderId         Int
  itemId          Int
  scannedQuantity Int
  scannedAt       DateTime       @default(now())
  isDeleted       Int            @default(0)
  item            items          @relation(fields: [itemId], references: [id], onDelete: Cascade)
  order           orders         @relation(fields: [orderId], references: [id], onDelete: Cascade)
  packingProof    packing_proofs @relation(fields: [packingProofId], references: [id], onDelete: Cascade)
}
